package model;

import java.security.NoSuchAlgorithmException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import dto.AccountDTO;
import service.SHA512;

public class AccountDAO extends DAO{
	
	private String getHash(AccountDTO input) throws NoSuchAlgorithmException {
		String hash = SHA512.getHash(input.getUserpw());
		
		return hash;
	}
	
	private AccountDTO mapper(ResultSet rs) throws SQLException {
		AccountDTO row = new AccountDTO();
		
		row.setEmail(rs.getString("email"));
		row.setIdx(rs.getInt("idx"));
		row.setJoin_date(rs.getDate("join_date"));
		row.setNick(rs.getString("nick"));
		row.setUserid(rs.getString("userid"));
		row.setUserpw(rs.getString("userpw"));
		
		return row;
	}
	
	public List<AccountDTO> selectAll(){
		String sql = "select * from account";
		
		try {
			conn = ds.getConnection();
			stmt = conn.createStatement();
			rs = stmt.executeQuery(sql);
			
			ArrayList<AccountDTO> list = new ArrayList<>();
			
			while(rs.next()) {
				AccountDTO row = mapper(rs);
				list.add(row);
			}
			
			return list;
			
		} catch (SQLException e) {
			System.err.println("selectAll 예외" + e.getMessage());
		} finally {
			close();
		}
		return null;
		
	}
	
	public AccountDTO selectOne(AccountDTO input) {
		String sql = "select * from account "
				+ "where userid = ? "
				+ "and userpw = ?";
	
		try {
			String hash = SHA512.getHash(input.getUserpw());
			
			conn = ds.getConnection();
			pstmt = conn.prepareStatement(sql);
			
			pstmt.setString(1, input.getUserid());
			pstmt.setString(2, hash);
			
			rs = pstmt.executeQuery();
			rs.next();
			
			AccountDTO row = mapper(rs);
			
			return row;
		} catch (SQLException | NoSuchAlgorithmException e) {
			System.err.println("selectOne 예외 발생" +  e.getMessage());
		} finally {
			close();
		}
		return null;
	}
	
	public int insert(AccountDTO input) {
		String sql = "insert into "
			    + "account(userid, userpw, nick, email) "
			    + "values(?, ?, ?, ?)";
		
		try {
			conn = ds.getConnection();
			pstmt = conn.prepareStatement(sql);
			
			pstmt.setString(1, input.getUserid());
			pstmt.setString(2, getHash(input));
			pstmt.setString(3, input.getNick());
			pstmt.setString(4, input.getEmail());
			
			return pstmt.executeUpdate();
		} catch (Exception e) {
			System.err.println("insert 예외 발생" + e.getMessage());
		} finally {
			close();
		}
		return 0;
	}
	
	public int update(AccountDTO input) {
		String sql = "update account "
				+ "set userpw= ?, "
				+ "email=? where idx=?";
		
		try {
			conn = ds.getConnection();
			pstmt = conn.prepareStatement(sql);
			
			pstmt.setString(1, getHash(input));
			pstmt.setString(2, input.getEmail());
			pstmt.setInt(3, input.getIdx());
			
		} catch (Exception e) {
			System.err.println("update 예외 발생 " + e.getMessage());
		} finally {
			close();
		}
		return 0;
				
	}
	
	public int delete(int idx) {
		String sql = "delete from account where idx = ?";
		
		try {
			conn = ds.getConnection();
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, idx);
			
			return pstmt.executeUpdate();
		} catch(SQLException e) {
			System.err.println("delete 예외 " +  e.getMessage());
		} finally {
			close();
		}
		
		return 0;
	}
	
}
